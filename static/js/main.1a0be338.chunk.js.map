{"version":3,"sources":["context/auth-context.js","components/Navigation/MainNavigation.js","pages/Auth.js","components/Spinner/Spinner.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingChart/BookingChart.js","components/Bookings/BookingControl/BookingControl.js","pages/Bookings.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","mainNavigation","props","Consumer","context","className","to","onClick","AuthPage","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","catch","error","console","log","createRef","onSubmit","this","htmlFor","type","id","ref","Component","contextType","AuthContext","spinner","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","price","push","Object","keys","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","responsive","legend","display","text","scales","yAxes","ticks","beginAtZero","bookingControl","activeOutputType","onChange","BookingsPage","isLoading","outputType","deleteBookingHandler","bookingId","Authorization","filter","changeOutputTypeHandler","fetchBookings","content","Fragment","modal","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","eventId","date","creatorId","onDetail","eventList","events","authUserId","creator","onViewDetail","EventsPage","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmationHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","updatedEvents","createEvent","modalCancelHandler","showDetailhandler","find","e","bookEventhandler","fetchEvents","rows","App","Provider","from","exact","path","component","defaults","global","defaultFontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a0be338.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default React.createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: (token, userId, tokenExpiration) => {},\r\n  logout: () => {},\r\n})\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nimport AuthContext from \"../../context/auth-context\"\r\n\r\nimport \"./MainNavigation.css\"\r\n\r\nconst mainNavigation = (props) => (\r\n  <AuthContext.Consumer>\r\n    {(context) => (\r\n      <header className=\"main-navigation\">\r\n        <div className=\"main-navigation__logo\">\r\n          <h1>Eventrr</h1>\r\n        </div>\r\n        <nav className=\"main-navigation__items\">\r\n          <ul>\r\n            {!context.token && (\r\n              <li>\r\n                <NavLink to=\"/auth\">Authenticate</NavLink>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <NavLink to=\"/events\">Events</NavLink>\r\n            </li>\r\n            {context.token && (\r\n              <li>\r\n                <NavLink to=\"/bookings\">Bookings</NavLink>\r\n              </li>\r\n            )}\r\n            {context.token && (\r\n              <li>\r\n                <button onClick={context.logout}>Logout</button>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    )}\r\n  </AuthContext.Consumer>\r\n)\r\n\r\nexport default mainNavigation\r\n","import React, { Component } from \"react\"\r\n\r\nimport \"./Auth.css\"\r\nimport AuthContext from \"../context/auth-context\"\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isLogin: true,\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.emailEl = React.createRef()\r\n    this.passwordEl = React.createRef()\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    this.setState((prevState) => ({\r\n      isLogin: !prevState.isLogin,\r\n    }))\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault()\r\n    const email = this.emailEl.current.value\r\n    const password = this.passwordEl.current.value\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!) {\r\n          login(email: $email, password: $password ) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n    }\r\n\r\n    if (!this.state.isLogin) {\r\n      requestBody = {\r\n        query: `\r\n        mutation CreateUser($email: String!, $password: String!) {\r\n          createUser(userInput: { email: $email, password: $password }) {\r\n            _id\r\n            email\r\n          }\r\n        }\r\n      `,\r\n        variables: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      }\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\")\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((resData) => {\r\n        if (resData.data.login.token) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          )\r\n        }\r\n        // TODO: Add logic for showing user created\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch to {this.state.isLogin ? \"Sign Up\" : \"Login\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthPage\r\n","import React from \"react\"\r\n\r\nimport \"./Spinner.css\"\r\n\r\nconst spinner = (props) => (\r\n  <div className=\"spinner\">\r\n    <div className=\"loader\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default spinner\r\n","import React from \"react\"\r\n\r\nimport \"./BookingList.css\"\r\n\r\nconst bookingList = (props) => (\r\n  <ul className=\"bookings__list\">\r\n    {props.bookings.map((booking) => {\r\n      return (\r\n        <li key={booking._id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            <h1>{booking.event.title}</h1>\r\n            <p>{new Date(booking.createdAt).toLocaleDateString()}</p>\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button\r\n              className=\"btn\"\r\n              onClick={props.onDelete.bind(this, booking._id)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </li>\r\n      )\r\n    })}\r\n  </ul>\r\n)\r\n\r\nexport default bookingList\r\n","import React from \"react\"\r\nimport { Bar } from \"react-chartjs-2\"\r\n\r\nimport \"./BookingChart.css\"\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n  Cheap: {\r\n    min: 0,\r\n    max: 100,\r\n  },\r\n  Normal: {\r\n    min: 101,\r\n    max: 200,\r\n  },\r\n  Expensive: {\r\n    min: 201,\r\n    max: 1000000000,\r\n  },\r\n}\r\n\r\nconst bookingChart = (props) => {\r\n  const chartData = { labels: [], datasets: [] }\r\n  let values = []\r\n  for (const bucket in BOOKINGS_BUCKETS) {\r\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n      if (\r\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\r\n      ) {\r\n        return prev + 1\r\n      }\r\n      return prev\r\n    }, 0)\r\n    values.push(filteredBookingsCount)\r\n  }\r\n\r\n  chartData.labels = Object.keys(BOOKINGS_BUCKETS)\r\n  chartData.datasets = [\r\n    {\r\n      backgroundColor: \"rgba(81, 45, 168, 0.2)\",\r\n      borderColor: \"rgba(81, 45, 168, 1)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(49, 27, 146, 0.4)\",\r\n      hoverBorderColor: \"rgba(49, 27, 146, 1)\",\r\n      data: values,\r\n    },\r\n  ]\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    legend: { display: false },\r\n    title: {\r\n      display: true,\r\n      text: \"Bookings per expense category\",\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"booking-chart\">\r\n      <Bar data={chartData} options={chartOptions} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default bookingChart\r\n","import React from \"react\"\r\n\r\nimport \"./BookingControl.css\"\r\n\r\nconst bookingControl = (props) => {\r\n  return (\r\n    <div className=\"bookings__control\">\r\n      <button\r\n        className={props.activeOutputType === \"list\" ? \"active\" : \"\"}\r\n        onClick={props.onChange.bind(this, \"list\")}\r\n      >\r\n        List\r\n      </button>\r\n      <button\r\n        className={props.activeOutputType === \"chart\" ? \"active\" : \"\"}\r\n        onClick={props.onChange.bind(this, \"chart\")}\r\n      >\r\n        Chart\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default bookingControl\r\n","import React, { Component } from \"react\"\r\n\r\nimport Spinner from \"../components/Spinner/Spinner\"\r\nimport BookingList from \"../components/Bookings/BookingList/BookingList\"\r\nimport BookingChart from \"../components/Bookings/BookingChart/BookingChart\"\r\nimport BookingControl from \"../components/Bookings/BookingControl/BookingControl\"\r\n\r\nimport AuthContext from \"../context/auth-context\"\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: [],\r\n    outputType: \"list\",\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBookings()\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  fetchBookings() {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          bookings {\r\n            _id\r\n            createdAt\r\n            event {\r\n              _id\r\n              title\r\n              date\r\n              price\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${this.context.token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\")\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((resData) => {\r\n        const bookings = resData.data.bookings\r\n        this.setState({ bookings: bookings, isLoading: false })\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  deleteBookingHandler = (bookingId) => {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        mutation CancelBooking($id: ID!) {\r\n          cancelBooking(bookingId: $id) {\r\n            _id\r\n            title\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        id: bookingId,\r\n      },\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${this.context.token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\")\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedBookings = prevState.bookings.filter((booking) => {\r\n            return booking._id !== bookingId\r\n          })\r\n\r\n          return { bookings: updatedBookings, isLoading: false }\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n\r\n  changeOutputTypeHandler = (outputType) => {\r\n    if (outputType === \"list\") {\r\n      this.setState({ outputType: \"list\" })\r\n    } else {\r\n      this.setState({ outputType: \"chart\" })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content = <Spinner />\r\n    if (!this.state.isLoading) {\r\n      content = (\r\n        <React.Fragment>\r\n          <BookingControl\r\n            activeOutputType={this.state.outputType}\r\n            onChange={this.changeOutputTypeHandler}\r\n          />\r\n          <div>\r\n            {this.state.outputType === \"list\" ? (\r\n              <BookingList\r\n                bookings={this.state.bookings}\r\n                onDelete={this.deleteBookingHandler}\r\n              />\r\n            ) : (\r\n              <BookingChart bookings={this.state.bookings} />\r\n            )}\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n    return <React.Fragment>{content}</React.Fragment>\r\n  }\r\n}\r\n\r\nexport default BookingsPage\r\n","import React from \"react\"\r\n\r\nimport \"./Modal.css\"\r\n\r\nconst modal = (props) => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className=\"btn\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n)\r\n\r\nexport default modal\r\n","import React from \"react\"\r\n\r\nimport \"./Backdrop.css\"\r\n\r\nconst backdrop = (props) => <div className=\"backdrop\"></div>\r\n\r\nexport default backdrop\r\n","import React from \"react\"\r\n\r\nimport \"./EventItem.css\"\r\n\r\nconst eventItem = (props) => (\r\n  <li key={props.eventId} className=\"event__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>${props.price}</h2>\r\n      <p>{new Date(props.date).toLocaleDateString()}</p>\r\n    </div>\r\n    <div className=\"event__list-item__control\">\r\n      {props.userId === props.creatorId ? (\r\n        <p>You created this event</p>\r\n      ) : (\r\n        <button\r\n          className=\"btn\"\r\n          onClick={props.onDetail.bind(this, props.eventId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n)\r\n\r\nexport default eventItem\r\n","import React from \"react\"\r\n\r\nimport EventItem from \"./EventItem/EventItem\"\r\n\r\nimport \"./EventList.css\"\r\n\r\nconst eventList = (props) => {\r\n  const events = props.events.map((event) => (\r\n    <EventItem\r\n      key={event._id}\r\n      eventId={event._id}\r\n      title={event.title}\r\n      price={event.price}\r\n      date={event.date}\r\n      userId={props.authUserId}\r\n      creatorId={event.creator._id}\r\n      onDetail={props.onViewDetail}\r\n    />\r\n  ))\r\n  return <ul className=\"event__list\">{events}</ul>\r\n}\r\n\r\nexport default eventList\r\n","import React, { Component } from \"react\"\r\n\r\nimport Modal from \"../components/Modal/Modal\"\r\nimport Backdrop from \"../components/Backdrop/Backdrop\"\r\nimport EventList from \"../components/Events/EventList/EventList\"\r\nimport Spinner from \"../components/Spinner/Spinner\"\r\n\r\nimport AuthContext from \"../context/auth-context\"\r\n\r\nimport \"./Events.css\"\r\n\r\nclass EventsPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null,\r\n  }\r\n\r\n  isActive = true\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.titleElRef = React.createRef()\r\n    this.priceElRef = React.createRef()\r\n    this.dateElRef = React.createRef()\r\n    this.descriptionElRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false\r\n  }\r\n\r\n  compo\r\n\r\n  static contextType = AuthContext\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true })\r\n  }\r\n\r\n  modalConfirmationHandler = () => {\r\n    this.setState({ creating: false })\r\n    const title = this.titleElRef.current.value\r\n    const price = +this.priceElRef.current.value\r\n    const date = this.dateElRef.current.value\r\n    const description = this.descriptionElRef.current.value\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return\r\n    }\r\n\r\n    // const event = { title, price, date, description }\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateEvent($title: String!, $description: String!, $price: Float!, $date: String!) {\r\n          createEvent(eventInput: { title: $title, description: $description, price: $price, date: $date }) {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        title,\r\n        description,\r\n        price,\r\n        date,\r\n      },\r\n    }\r\n\r\n    const token = this.context.token\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\")\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((resData) => {\r\n        this.setState((prevState) => {\r\n          const updatedEvents = [...prevState.events]\r\n          updatedEvents.push({\r\n            _id: resData.data.createEvent._id,\r\n            title: resData.data.createEvent.title,\r\n            description: resData.data.createEvent.description,\r\n            date: resData.data.createEvent.date,\r\n            price: resData.data.createEvent.price,\r\n            creator: {\r\n              _id: this.context.userId,\r\n            },\r\n          })\r\n\r\n          return { events: updatedEvents }\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedEvent: null })\r\n  }\r\n\r\n  fetchEvents() {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          events {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n            creator {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\")\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((resData) => {\r\n        const events = resData.data.events\r\n        if (this.isActive) {\r\n          this.setState({ events: events, isLoading: false })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false })\r\n        }\r\n      })\r\n  }\r\n\r\n  showDetailhandler = (eventId) => {\r\n    this.setState((prevState) => {\r\n      const selectedEvent = prevState.events.find((e) => e._id === eventId)\r\n      return { selectedEvent: selectedEvent }\r\n    })\r\n  }\r\n\r\n  bookEventhandler = () => {\r\n    const requestBody = {\r\n      query: `\r\n        mutation BookEvent($id: ID!) {\r\n          bookEvent(eventId: $id) {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        id: this.state.selectedEvent._id,\r\n      },\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${this.context.token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error(\"Failed!\")\r\n        }\r\n        return res.json()\r\n      })\r\n      .then((resData) => {\r\n        this.setState({ selectedEvent: null })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            confirmText=\"Create New Event\"\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmationHandler}\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"date\" id=\"date\" ref={this.dateElRef} />\r\n              </div>\r\n\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  rows=\"4\"\r\n                  ref={this.descriptionElRef}\r\n                ></textarea>\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title=\"Event Details\"\r\n            canCancel\r\n            canConfirm={this.context.token ? true : false}\r\n            confirmText=\"Book Event\"\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventhandler}\r\n          >\r\n            <h1>{this.state.selectedEvent.title}</h1>\r\n            <h2>${this.state.selectedEvent.price}</h2>\r\n            <h4>\r\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\r\n            </h4>\r\n            <p>{this.state.selectedEvent.description}</p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <h1>Share your own events!</h1>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create Event\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailhandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EventsPage\r\n","import React, { Component } from \"react\"\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\"\n\nimport MainNavigation from \"./components/Navigation/MainNavigation\"\n\nimport AuthPage from \"./pages/Auth\"\nimport BookingsPage from \"./pages/Bookings\"\nimport EventsPage from \"./pages/Events\"\nimport AuthContext from \"./context/auth-context\"\n\nimport \"./App.css\"\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n  }\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId })\n  }\n\n  logout = () => {\n    this.setState({ token: null, userId: null })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout,\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { defaults } from \"react-chartjs-2\"\n\nimport \"normalize.css\"\nimport \"./index.css\"\n\nimport App from \"./App\"\n\ndefaults.global.defaultFontFamily = \"Jost\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}